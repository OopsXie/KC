// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: dataServer.proto

package pb

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WriteBlockRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Content:
	//
	//	*WriteBlockRequest_Metadata
	//	*WriteBlockRequest_ChunkData
	Content       isWriteBlockRequest_Content `protobuf_oneof:"content"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteBlockRequest) Reset() {
	*x = WriteBlockRequest{}
	mi := &file_dataServer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteBlockRequest) ProtoMessage() {}

func (x *WriteBlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataServer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteBlockRequest.ProtoReflect.Descriptor instead.
func (*WriteBlockRequest) Descriptor() ([]byte, []int) {
	return file_dataServer_proto_rawDescGZIP(), []int{0}
}

func (x *WriteBlockRequest) GetContent() isWriteBlockRequest_Content {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *WriteBlockRequest) GetMetadata() *WriteBlockMetadata {
	if x != nil {
		if x, ok := x.Content.(*WriteBlockRequest_Metadata); ok {
			return x.Metadata
		}
	}
	return nil
}

func (x *WriteBlockRequest) GetChunkData() []byte {
	if x != nil {
		if x, ok := x.Content.(*WriteBlockRequest_ChunkData); ok {
			return x.ChunkData
		}
	}
	return nil
}

type isWriteBlockRequest_Content interface {
	isWriteBlockRequest_Content()
}

type WriteBlockRequest_Metadata struct {
	Metadata *WriteBlockMetadata `protobuf:"bytes,1,opt,name=metadata,proto3,oneof"`
}

type WriteBlockRequest_ChunkData struct {
	ChunkData []byte `protobuf:"bytes,2,opt,name=chunk_data,json=chunkData,proto3,oneof"`
}

func (*WriteBlockRequest_Metadata) isWriteBlockRequest_Content() {}

func (*WriteBlockRequest_ChunkData) isWriteBlockRequest_Content() {}

type WriteBlockMetadata struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	BlockId          uint64                 `protobuf:"varint,1,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	ReplicaLocations []string               `protobuf:"bytes,2,rep,name=replica_locations,json=replicaLocations,proto3" json:"replica_locations,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *WriteBlockMetadata) Reset() {
	*x = WriteBlockMetadata{}
	mi := &file_dataServer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteBlockMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteBlockMetadata) ProtoMessage() {}

func (x *WriteBlockMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_dataServer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteBlockMetadata.ProtoReflect.Descriptor instead.
func (*WriteBlockMetadata) Descriptor() ([]byte, []int) {
	return file_dataServer_proto_rawDescGZIP(), []int{1}
}

func (x *WriteBlockMetadata) GetBlockId() uint64 {
	if x != nil {
		return x.BlockId
	}
	return 0
}

func (x *WriteBlockMetadata) GetReplicaLocations() []string {
	if x != nil {
		return x.ReplicaLocations
	}
	return nil
}

type WriteBlockResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteBlockResponse) Reset() {
	*x = WriteBlockResponse{}
	mi := &file_dataServer_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteBlockResponse) ProtoMessage() {}

func (x *WriteBlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataServer_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteBlockResponse.ProtoReflect.Descriptor instead.
func (*WriteBlockResponse) Descriptor() ([]byte, []int) {
	return file_dataServer_proto_rawDescGZIP(), []int{2}
}

func (x *WriteBlockResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ReadBlockRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BlockId       uint64                 `protobuf:"varint,1,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadBlockRequest) Reset() {
	*x = ReadBlockRequest{}
	mi := &file_dataServer_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadBlockRequest) ProtoMessage() {}

func (x *ReadBlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataServer_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadBlockRequest.ProtoReflect.Descriptor instead.
func (*ReadBlockRequest) Descriptor() ([]byte, []int) {
	return file_dataServer_proto_rawDescGZIP(), []int{3}
}

func (x *ReadBlockRequest) GetBlockId() uint64 {
	if x != nil {
		return x.BlockId
	}
	return 0
}

type ReadBlockResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChunkData     []byte                 `protobuf:"bytes,1,opt,name=chunk_data,json=chunkData,proto3" json:"chunk_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadBlockResponse) Reset() {
	*x = ReadBlockResponse{}
	mi := &file_dataServer_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadBlockResponse) ProtoMessage() {}

func (x *ReadBlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataServer_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadBlockResponse.ProtoReflect.Descriptor instead.
func (*ReadBlockResponse) Descriptor() ([]byte, []int) {
	return file_dataServer_proto_rawDescGZIP(), []int{4}
}

func (x *ReadBlockResponse) GetChunkData() []byte {
	if x != nil {
		return x.ChunkData
	}
	return nil
}

type DeleteBlockRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BlockId       uint64                 `protobuf:"varint,1,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteBlockRequest) Reset() {
	*x = DeleteBlockRequest{}
	mi := &file_dataServer_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBlockRequest) ProtoMessage() {}

func (x *DeleteBlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataServer_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBlockRequest.ProtoReflect.Descriptor instead.
func (*DeleteBlockRequest) Descriptor() ([]byte, []int) {
	return file_dataServer_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteBlockRequest) GetBlockId() uint64 {
	if x != nil {
		return x.BlockId
	}
	return 0
}

type DeleteBlockResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteBlockResponse) Reset() {
	*x = DeleteBlockResponse{}
	mi := &file_dataServer_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBlockResponse) ProtoMessage() {}

func (x *DeleteBlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataServer_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBlockResponse.ProtoReflect.Descriptor instead.
func (*DeleteBlockResponse) Descriptor() ([]byte, []int) {
	return file_dataServer_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteBlockResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type CopyBlockRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BlockId       uint64                 `protobuf:"varint,1,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	SourceAddress string                 `protobuf:"bytes,2,opt,name=source_address,json=sourceAddress,proto3" json:"source_address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CopyBlockRequest) Reset() {
	*x = CopyBlockRequest{}
	mi := &file_dataServer_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CopyBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyBlockRequest) ProtoMessage() {}

func (x *CopyBlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dataServer_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyBlockRequest.ProtoReflect.Descriptor instead.
func (*CopyBlockRequest) Descriptor() ([]byte, []int) {
	return file_dataServer_proto_rawDescGZIP(), []int{7}
}

func (x *CopyBlockRequest) GetBlockId() uint64 {
	if x != nil {
		return x.BlockId
	}
	return 0
}

func (x *CopyBlockRequest) GetSourceAddress() string {
	if x != nil {
		return x.SourceAddress
	}
	return ""
}

type CopyBlockResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CopyBlockResponse) Reset() {
	*x = CopyBlockResponse{}
	mi := &file_dataServer_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CopyBlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyBlockResponse) ProtoMessage() {}

func (x *CopyBlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dataServer_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyBlockResponse.ProtoReflect.Descriptor instead.
func (*CopyBlockResponse) Descriptor() ([]byte, []int) {
	return file_dataServer_proto_rawDescGZIP(), []int{8}
}

func (x *CopyBlockResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_dataServer_proto protoreflect.FileDescriptor

const file_dataServer_proto_rawDesc = "" +
	"\n" +
	"\x10dataServer.proto\x12\vdfs_project\"~\n" +
	"\x11WriteBlockRequest\x12=\n" +
	"\bmetadata\x18\x01 \x01(\v2\x1f.dfs_project.WriteBlockMetadataH\x00R\bmetadata\x12\x1f\n" +
	"\n" +
	"chunk_data\x18\x02 \x01(\fH\x00R\tchunkDataB\t\n" +
	"\acontent\"\\\n" +
	"\x12WriteBlockMetadata\x12\x19\n" +
	"\bblock_id\x18\x01 \x01(\x04R\ablockId\x12+\n" +
	"\x11replica_locations\x18\x02 \x03(\tR\x10replicaLocations\".\n" +
	"\x12WriteBlockResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"-\n" +
	"\x10ReadBlockRequest\x12\x19\n" +
	"\bblock_id\x18\x01 \x01(\x04R\ablockId\"2\n" +
	"\x11ReadBlockResponse\x12\x1d\n" +
	"\n" +
	"chunk_data\x18\x01 \x01(\fR\tchunkData\"/\n" +
	"\x12DeleteBlockRequest\x12\x19\n" +
	"\bblock_id\x18\x01 \x01(\x04R\ablockId\"/\n" +
	"\x13DeleteBlockResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"T\n" +
	"\x10CopyBlockRequest\x12\x19\n" +
	"\bblock_id\x18\x01 \x01(\x04R\ablockId\x12%\n" +
	"\x0esource_address\x18\x02 \x01(\tR\rsourceAddress\"-\n" +
	"\x11CopyBlockResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess2\xd0\x02\n" +
	"\x11DataServerService\x12O\n" +
	"\n" +
	"WriteBlock\x12\x1e.dfs_project.WriteBlockRequest\x1a\x1f.dfs_project.WriteBlockResponse(\x01\x12L\n" +
	"\tReadBlock\x12\x1d.dfs_project.ReadBlockRequest\x1a\x1e.dfs_project.ReadBlockResponse0\x01\x12P\n" +
	"\vDeleteBlock\x12\x1f.dfs_project.DeleteBlockRequest\x1a .dfs_project.DeleteBlockResponse\x12J\n" +
	"\tCopyBlock\x12\x1d.dfs_project.CopyBlockRequest\x1a\x1e.dfs_project.CopyBlockResponseB\x06Z\x04./pbb\x06proto3"

var (
	file_dataServer_proto_rawDescOnce sync.Once
	file_dataServer_proto_rawDescData []byte
)

func file_dataServer_proto_rawDescGZIP() []byte {
	file_dataServer_proto_rawDescOnce.Do(func() {
		file_dataServer_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_dataServer_proto_rawDesc), len(file_dataServer_proto_rawDesc)))
	})
	return file_dataServer_proto_rawDescData
}

var file_dataServer_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_dataServer_proto_goTypes = []any{
	(*WriteBlockRequest)(nil),   // 0: dfs_project.WriteBlockRequest
	(*WriteBlockMetadata)(nil),  // 1: dfs_project.WriteBlockMetadata
	(*WriteBlockResponse)(nil),  // 2: dfs_project.WriteBlockResponse
	(*ReadBlockRequest)(nil),    // 3: dfs_project.ReadBlockRequest
	(*ReadBlockResponse)(nil),   // 4: dfs_project.ReadBlockResponse
	(*DeleteBlockRequest)(nil),  // 5: dfs_project.DeleteBlockRequest
	(*DeleteBlockResponse)(nil), // 6: dfs_project.DeleteBlockResponse
	(*CopyBlockRequest)(nil),    // 7: dfs_project.CopyBlockRequest
	(*CopyBlockResponse)(nil),   // 8: dfs_project.CopyBlockResponse
}
var file_dataServer_proto_depIdxs = []int32{
	1, // 0: dfs_project.WriteBlockRequest.metadata:type_name -> dfs_project.WriteBlockMetadata
	0, // 1: dfs_project.DataServerService.WriteBlock:input_type -> dfs_project.WriteBlockRequest
	3, // 2: dfs_project.DataServerService.ReadBlock:input_type -> dfs_project.ReadBlockRequest
	5, // 3: dfs_project.DataServerService.DeleteBlock:input_type -> dfs_project.DeleteBlockRequest
	7, // 4: dfs_project.DataServerService.CopyBlock:input_type -> dfs_project.CopyBlockRequest
	2, // 5: dfs_project.DataServerService.WriteBlock:output_type -> dfs_project.WriteBlockResponse
	4, // 6: dfs_project.DataServerService.ReadBlock:output_type -> dfs_project.ReadBlockResponse
	6, // 7: dfs_project.DataServerService.DeleteBlock:output_type -> dfs_project.DeleteBlockResponse
	8, // 8: dfs_project.DataServerService.CopyBlock:output_type -> dfs_project.CopyBlockResponse
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_dataServer_proto_init() }
func file_dataServer_proto_init() {
	if File_dataServer_proto != nil {
		return
	}
	file_dataServer_proto_msgTypes[0].OneofWrappers = []any{
		(*WriteBlockRequest_Metadata)(nil),
		(*WriteBlockRequest_ChunkData)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_dataServer_proto_rawDesc), len(file_dataServer_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dataServer_proto_goTypes,
		DependencyIndexes: file_dataServer_proto_depIdxs,
		MessageInfos:      file_dataServer_proto_msgTypes,
	}.Build()
	File_dataServer_proto = out.File
	file_dataServer_proto_goTypes = nil
	file_dataServer_proto_depIdxs = nil
}
