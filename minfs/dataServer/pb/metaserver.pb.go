// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v3.20.3
// source: metaServer.proto

// 与 dataServer.proto 使用同一个包名，便于管理

package pb

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 文件类型枚举 (匹配 easyClient FileType)
type FileType int32

const (
	FileType_Unknown   FileType = 0 // easyClient: Unknown(0)
	FileType_Volume    FileType = 1 // easyClient: Volume(1)
	FileType_File      FileType = 2 // easyClient: File(2)
	FileType_Directory FileType = 3 // easyClient: Directory(3)
)

// Enum value maps for FileType.
var (
	FileType_name = map[int32]string{
		0: "Unknown",
		1: "Volume",
		2: "File",
		3: "Directory",
	}
	FileType_value = map[string]int32{
		"Unknown":   0,
		"Volume":    1,
		"File":      2,
		"Directory": 3,
	}
)

func (x FileType) Enum() *FileType {
	p := new(FileType)
	*p = x
	return p
}

func (x FileType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileType) Descriptor() protoreflect.EnumDescriptor {
	return file_metaServer_proto_enumTypes[0].Descriptor()
}

func (FileType) Type() protoreflect.EnumType {
	return &file_metaServer_proto_enumTypes[0]
}

func (x FileType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileType.Descriptor instead.
func (FileType) EnumDescriptor() ([]byte, []int) {
	return file_metaServer_proto_rawDescGZIP(), []int{0}
}

// WAL操作类型枚举
type WALOperationType int32

const (
	WALOperationType_CREATE_NODE    WALOperationType = 0 // 创建文件或目录
	WALOperationType_DELETE_NODE    WALOperationType = 1 // 删除文件或目录
	WALOperationType_UPDATE_NODE    WALOperationType = 2 // 更新节点信息
	WALOperationType_FINALIZE_WRITE WALOperationType = 3 // 完成写入操作
)

// Enum value maps for WALOperationType.
var (
	WALOperationType_name = map[int32]string{
		0: "CREATE_NODE",
		1: "DELETE_NODE",
		2: "UPDATE_NODE",
		3: "FINALIZE_WRITE",
	}
	WALOperationType_value = map[string]int32{
		"CREATE_NODE":    0,
		"DELETE_NODE":    1,
		"UPDATE_NODE":    2,
		"FINALIZE_WRITE": 3,
	}
)

func (x WALOperationType) Enum() *WALOperationType {
	p := new(WALOperationType)
	*p = x
	return p
}

func (x WALOperationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WALOperationType) Descriptor() protoreflect.EnumDescriptor {
	return file_metaServer_proto_enumTypes[1].Descriptor()
}

func (WALOperationType) Type() protoreflect.EnumType {
	return &file_metaServer_proto_enumTypes[1]
}

func (x WALOperationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WALOperationType.Descriptor instead.
func (WALOperationType) EnumDescriptor() ([]byte, []int) {
	return file_metaServer_proto_rawDescGZIP(), []int{1}
}

type Command_Action int32

const (
	Command_DELETE_BLOCK Command_Action = 0
	Command_COPY_BLOCK   Command_Action = 1
)

// Enum value maps for Command_Action.
var (
	Command_Action_name = map[int32]string{
		0: "DELETE_BLOCK",
		1: "COPY_BLOCK",
	}
	Command_Action_value = map[string]int32{
		"DELETE_BLOCK": 0,
		"COPY_BLOCK":   1,
	}
)

func (x Command_Action) Enum() *Command_Action {
	p := new(Command_Action)
	*p = x
	return p
}

func (x Command_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Command_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_metaServer_proto_enumTypes[2].Descriptor()
}

func (Command_Action) Type() protoreflect.EnumType {
	return &file_metaServer_proto_enumTypes[2]
}

func (x Command_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Command_Action.Descriptor instead.
func (Command_Action) EnumDescriptor() ([]byte, []int) {
	return file_metaServer_proto_rawDescGZIP(), []int{20, 0}
}

// 副本数据结构 (匹配 easyClient ReplicaData)
type ReplicaData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`         // 副本ID
	DsNode        string                 `protobuf:"bytes,2,opt,name=dsNode,proto3" json:"dsNode,omitempty"` // DataServer地址 "ip:port"
	Path          string                 `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`     // 文件在DataServer上的路径
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplicaData) Reset() {
	*x = ReplicaData{}
	mi := &file_metaServer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplicaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicaData) ProtoMessage() {}

func (x *ReplicaData) ProtoReflect() protoreflect.Message {
	mi := &file_metaServer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicaData.ProtoReflect.Descriptor instead.
func (*ReplicaData) Descriptor() ([]byte, []int) {
	return file_metaServer_proto_rawDescGZIP(), []int{0}
}

func (x *ReplicaData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ReplicaData) GetDsNode() string {
	if x != nil {
		return x.DsNode
	}
	return ""
}

func (x *ReplicaData) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// 文件统计信息 (完全匹配 easyClient StatInfo)
type StatInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`                            // 文件路径
	Size          int64                  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`                           // 文件大小
	Mtime         int64                  `protobuf:"varint,3,opt,name=mtime,proto3" json:"mtime,omitempty"`                         // 修改时间 Unix时间戳(毫秒)
	Type          FileType               `protobuf:"varint,4,opt,name=type,proto3,enum=dfs_project.FileType" json:"type,omitempty"` // 文件类型
	ReplicaData   []*ReplicaData         `protobuf:"bytes,5,rep,name=replicaData,proto3" json:"replicaData,omitempty"`              // 副本数据列表
	Md5           string                 `protobuf:"bytes,6,opt,name=md5,proto3" json:"md5,omitempty"`                              // 文件MD5哈希值
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatInfo) Reset() {
	*x = StatInfo{}
	mi := &file_metaServer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatInfo) ProtoMessage() {}

func (x *StatInfo) ProtoReflect() protoreflect.Message {
	mi := &file_metaServer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatInfo.ProtoReflect.Descriptor instead.
func (*StatInfo) Descriptor() ([]byte, []int) {
	return file_metaServer_proto_rawDescGZIP(), []int{1}
}

func (x *StatInfo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *StatInfo) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *StatInfo) GetMtime() int64 {
	if x != nil {
		return x.Mtime
	}
	return 0
}

func (x *StatInfo) GetType() FileType {
	if x != nil {
		return x.Type
	}
	return FileType_Unknown
}

func (x *StatInfo) GetReplicaData() []*ReplicaData {
	if x != nil {
		return x.ReplicaData
	}
	return nil
}

func (x *StatInfo) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

// MetaServer 信息 (匹配 easyClient MetaServerMsg)
type MetaServerMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Host          string                 `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`  // 主机地址
	Port          int32                  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"` // 端口号
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetaServerMsg) Reset() {
	*x = MetaServerMsg{}
	mi := &file_metaServer_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetaServerMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaServerMsg) ProtoMessage() {}

func (x *MetaServerMsg) ProtoReflect() protoreflect.Message {
	mi := &file_metaServer_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaServerMsg.ProtoReflect.Descriptor instead.
func (*MetaServerMsg) Descriptor() ([]byte, []int) {
	return file_metaServer_proto_rawDescGZIP(), []int{2}
}

func (x *MetaServerMsg) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *MetaServerMsg) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

// DataServer 信息 (完全匹配 easyClient DataServerMsg)
type DataServerMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Host          string                 `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`                // 主机地址
	Port          int32                  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`               // 端口号
	FileTotal     int32                  `protobuf:"varint,3,opt,name=fileTotal,proto3" json:"fileTotal,omitempty"`     // 文件总数
	Capacity      int32                  `protobuf:"varint,4,opt,name=capacity,proto3" json:"capacity,omitempty"`       // 总容量 (MB)
	UseCapacity   int32                  `protobuf:"varint,5,opt,name=useCapacity,proto3" json:"useCapacity,omitempty"` // 已使用容量 (MB)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataServerMsg) Reset() {
	*x = DataServerMsg{}
	mi := &file_metaServer_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataServerMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataServerMsg) ProtoMessage() {}

func (x *DataServerMsg) ProtoReflect() protoreflect.Message {
	mi := &file_metaServer_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataServerMsg.ProtoReflect.Descriptor instead.
func (*DataServerMsg) Descriptor() ([]byte, []int) {
	return file_metaServer_proto_rawDescGZIP(), []int{3}
}

func (x *DataServerMsg) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *DataServerMsg) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *DataServerMsg) GetFileTotal() int32 {
	if x != nil {
		return x.FileTotal
	}
	return 0
}

func (x *DataServerMsg) GetCapacity() int32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

func (x *DataServerMsg) GetUseCapacity() int32 {
	if x != nil {
		return x.UseCapacity
	}
	return 0
}

// 集群信息 (完全匹配 easyClient ClusterInfo)
type ClusterInfo struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	MasterMetaServer *MetaServerMsg         `protobuf:"bytes,1,opt,name=masterMetaServer,proto3" json:"masterMetaServer,omitempty"` // 主MetaServer
	SlaveMetaServer  []*MetaServerMsg       `protobuf:"bytes,2,rep,name=slaveMetaServer,proto3" json:"slaveMetaServer,omitempty"`   // 从MetaServer列表
	DataServer       []*DataServerMsg       `protobuf:"bytes,3,rep,name=dataServer,proto3" json:"dataServer,omitempty"`             // DataServer列表
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ClusterInfo) Reset() {
	*x = ClusterInfo{}
	mi := &file_metaServer_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterInfo) ProtoMessage() {}

func (x *ClusterInfo) ProtoReflect() protoreflect.Message {
	mi := &file_metaServer_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterInfo.ProtoReflect.Descriptor instead.
func (*ClusterInfo) Descriptor() ([]byte, []int) {
	return file_metaServer_proto_rawDescGZIP(), []int{4}
}

func (x *ClusterInfo) GetMasterMetaServer() *MetaServerMsg {
	if x != nil {
		return x.MasterMetaServer
	}
	return nil
}

func (x *ClusterInfo) GetSlaveMetaServer() []*MetaServerMsg {
	if x != nil {
		return x.SlaveMetaServer
	}
	return nil
}

func (x *ClusterInfo) GetDataServer() []*DataServerMsg {
	if x != nil {
		return x.DataServer
	}
	return nil
}

// 内部节点信息 (服务端内部使用，保留必要字段)
type NodeInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Inode         uint64                 `protobuf:"varint,1,opt,name=inode,proto3" json:"inode,omitempty"`                         // 内部inode编号
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`                            // 完整路径
	Type          FileType               `protobuf:"varint,3,opt,name=type,proto3,enum=dfs_project.FileType" json:"type,omitempty"` // 类型 (使用统一的FileType)
	Size          int64                  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`                           // 文件大小
	Mtime         int64                  `protobuf:"varint,5,opt,name=mtime,proto3" json:"mtime,omitempty"`                         // 修改时间 Unix时间戳(毫秒)
	Replication   uint32                 `protobuf:"varint,6,opt,name=replication,proto3" json:"replication,omitempty"`             // 副本数
	Md5           string                 `protobuf:"bytes,7,opt,name=md5,proto3" json:"md5,omitempty"`                              // 文件MD5哈希值
	ReplicaData   []*ReplicaData         `protobuf:"bytes,8,rep,name=replicaData,proto3" json:"replicaData,omitempty"`              // 副本数据
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeInfo) Reset() {
	*x = NodeInfo{}
	mi := &file_metaServer_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInfo) ProtoMessage() {}

func (x *NodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_metaServer_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeInfo.ProtoReflect.Descriptor instead.
func (*NodeInfo) Descriptor() ([]byte, []int) {
	return file_metaServer_proto_rawDescGZIP(), []int{5}
}

func (x *NodeInfo) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *NodeInfo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *NodeInfo) GetType() FileType {
	if x != nil {
		return x.Type
	}
	return FileType_Unknown
}

func (x *NodeInfo) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *NodeInfo) GetMtime() int64 {
	if x != nil {
		return x.Mtime
	}
	return 0
}

func (x *NodeInfo) GetReplication() uint32 {
	if x != nil {
		return x.Replication
	}
	return 0
}

func (x *NodeInfo) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *NodeInfo) GetReplicaData() []*ReplicaData {
	if x != nil {
		return x.ReplicaData
	}
	return nil
}

// 一个数据块的所有副本位置
type BlockLocations struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BlockId       uint64                 `protobuf:"varint,1,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	Locations     []string               `protobuf:"bytes,2,rep,name=locations,proto3" json:"locations,omitempty"` // DataServer 地址列表 (IP:Port)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlockLocations) Reset() {
	*x = BlockLocations{}
	mi := &file_metaServer_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockLocations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockLocations) ProtoMessage() {}

func (x *BlockLocations) ProtoReflect() protoreflect.Message {
	mi := &file_metaServer_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockLocations.ProtoReflect.Descriptor instead.
func (*BlockLocations) Descriptor() ([]byte, []int) {
	return file_metaServer_proto_rawDescGZIP(), []int{6}
}

func (x *BlockLocations) GetBlockId() uint64 {
	if x != nil {
		return x.BlockId
	}
	return 0
}

func (x *BlockLocations) GetLocations() []string {
	if x != nil {
		return x.Locations
	}
	return nil
}

// 通用的简单响应，用于表示操作成功与否
type SimpleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SimpleResponse) Reset() {
	*x = SimpleResponse{}
	mi := &file_metaServer_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SimpleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleResponse) ProtoMessage() {}

func (x *SimpleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metaServer_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleResponse.ProtoReflect.Descriptor instead.
func (*SimpleResponse) Descriptor() ([]byte, []int) {
	return file_metaServer_proto_rawDescGZIP(), []int{7}
}

func (x *SimpleResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SimpleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// CreateNode
type CreateNodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Type          FileType               `protobuf:"varint,2,opt,name=type,proto3,enum=dfs_project.FileType" json:"type,omitempty"` // 使用统一的FileType
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNodeRequest) Reset() {
	*x = CreateNodeRequest{}
	mi := &file_metaServer_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNodeRequest) ProtoMessage() {}

func (x *CreateNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metaServer_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNodeRequest.ProtoReflect.Descriptor instead.
func (*CreateNodeRequest) Descriptor() ([]byte, []int) {
	return file_metaServer_proto_rawDescGZIP(), []int{8}
}

func (x *CreateNodeRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CreateNodeRequest) GetType() FileType {
	if x != nil {
		return x.Type
	}
	return FileType_Unknown
}

// GetNodeInfo - 返回 StatInfo 供 easyClient 使用
type GetNodeInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodeInfoRequest) Reset() {
	*x = GetNodeInfoRequest{}
	mi := &file_metaServer_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodeInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeInfoRequest) ProtoMessage() {}

func (x *GetNodeInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metaServer_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeInfoRequest.ProtoReflect.Descriptor instead.
func (*GetNodeInfoRequest) Descriptor() ([]byte, []int) {
	return file_metaServer_proto_rawDescGZIP(), []int{9}
}

func (x *GetNodeInfoRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type GetNodeInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StatInfo      *StatInfo              `protobuf:"bytes,1,opt,name=statInfo,proto3" json:"statInfo,omitempty"` // 直接返回easyClient需要的格式
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodeInfoResponse) Reset() {
	*x = GetNodeInfoResponse{}
	mi := &file_metaServer_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodeInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeInfoResponse) ProtoMessage() {}

func (x *GetNodeInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metaServer_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeInfoResponse.ProtoReflect.Descriptor instead.
func (*GetNodeInfoResponse) Descriptor() ([]byte, []int) {
	return file_metaServer_proto_rawDescGZIP(), []int{10}
}

func (x *GetNodeInfoResponse) GetStatInfo() *StatInfo {
	if x != nil {
		return x.StatInfo
	}
	return nil
}

// ListDirectory - 返回 StatInfo 列表供 easyClient 使用
type ListDirectoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDirectoryRequest) Reset() {
	*x = ListDirectoryRequest{}
	mi := &file_metaServer_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDirectoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDirectoryRequest) ProtoMessage() {}

func (x *ListDirectoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metaServer_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDirectoryRequest.ProtoReflect.Descriptor instead.
func (*ListDirectoryRequest) Descriptor() ([]byte, []int) {
	return file_metaServer_proto_rawDescGZIP(), []int{11}
}

func (x *ListDirectoryRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type ListDirectoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nodes         []*StatInfo            `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"` // 直接返回easyClient需要的格式
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDirectoryResponse) Reset() {
	*x = ListDirectoryResponse{}
	mi := &file_metaServer_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDirectoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDirectoryResponse) ProtoMessage() {}

func (x *ListDirectoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metaServer_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDirectoryResponse.ProtoReflect.Descriptor instead.
func (*ListDirectoryResponse) Descriptor() ([]byte, []int) {
	return file_metaServer_proto_rawDescGZIP(), []int{12}
}

func (x *ListDirectoryResponse) GetNodes() []*StatInfo {
	if x != nil {
		return x.Nodes
	}
	return nil
}

// DeleteNode
type DeleteNodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Recursive     bool                   `protobuf:"varint,2,opt,name=recursive,proto3" json:"recursive,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNodeRequest) Reset() {
	*x = DeleteNodeRequest{}
	mi := &file_metaServer_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNodeRequest) ProtoMessage() {}

func (x *DeleteNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metaServer_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNodeRequest.ProtoReflect.Descriptor instead.
func (*DeleteNodeRequest) Descriptor() ([]byte, []int) {
	return file_metaServer_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteNodeRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *DeleteNodeRequest) GetRecursive() bool {
	if x != nil {
		return x.Recursive
	}
	return false
}

// GetBlockLocations
type GetBlockLocationsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Size          int64                  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"` // 对于写操作，Client 告诉 metaServer 文件总大小
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBlockLocationsRequest) Reset() {
	*x = GetBlockLocationsRequest{}
	mi := &file_metaServer_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBlockLocationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockLocationsRequest) ProtoMessage() {}

func (x *GetBlockLocationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metaServer_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockLocationsRequest.ProtoReflect.Descriptor instead.
func (*GetBlockLocationsRequest) Descriptor() ([]byte, []int) {
	return file_metaServer_proto_rawDescGZIP(), []int{14}
}

func (x *GetBlockLocationsRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *GetBlockLocationsRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type GetBlockLocationsResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Inode          uint64                 `protobuf:"varint,1,opt,name=inode,proto3" json:"inode,omitempty"`
	BlockLocations []*BlockLocations      `protobuf:"bytes,2,rep,name=block_locations,json=blockLocations,proto3" json:"block_locations,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetBlockLocationsResponse) Reset() {
	*x = GetBlockLocationsResponse{}
	mi := &file_metaServer_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBlockLocationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockLocationsResponse) ProtoMessage() {}

func (x *GetBlockLocationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metaServer_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockLocationsResponse.ProtoReflect.Descriptor instead.
func (*GetBlockLocationsResponse) Descriptor() ([]byte, []int) {
	return file_metaServer_proto_rawDescGZIP(), []int{15}
}

func (x *GetBlockLocationsResponse) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *GetBlockLocationsResponse) GetBlockLocations() []*BlockLocations {
	if x != nil {
		return x.BlockLocations
	}
	return nil
}

// FinalizeWrite
type FinalizeWriteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Inode         uint64                 `protobuf:"varint,2,opt,name=inode,proto3" json:"inode,omitempty"`
	Size          int64                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Md5           string                 `protobuf:"bytes,4,opt,name=md5,proto3" json:"md5,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FinalizeWriteRequest) Reset() {
	*x = FinalizeWriteRequest{}
	mi := &file_metaServer_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FinalizeWriteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizeWriteRequest) ProtoMessage() {}

func (x *FinalizeWriteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metaServer_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalizeWriteRequest.ProtoReflect.Descriptor instead.
func (*FinalizeWriteRequest) Descriptor() ([]byte, []int) {
	return file_metaServer_proto_rawDescGZIP(), []int{16}
}

func (x *FinalizeWriteRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FinalizeWriteRequest) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *FinalizeWriteRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FinalizeWriteRequest) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

// GetClusterInfo - 直接返回 easyClient 需要的 ClusterInfo
type GetClusterInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetClusterInfoRequest) Reset() {
	*x = GetClusterInfoRequest{}
	mi := &file_metaServer_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClusterInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterInfoRequest) ProtoMessage() {}

func (x *GetClusterInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metaServer_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterInfoRequest.ProtoReflect.Descriptor instead.
func (*GetClusterInfoRequest) Descriptor() ([]byte, []int) {
	return file_metaServer_proto_rawDescGZIP(), []int{17}
}

type GetClusterInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClusterInfo   *ClusterInfo           `protobuf:"bytes,1,opt,name=clusterInfo,proto3" json:"clusterInfo,omitempty"` // 直接返回easyClient需要的格式
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetClusterInfoResponse) Reset() {
	*x = GetClusterInfoResponse{}
	mi := &file_metaServer_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClusterInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterInfoResponse) ProtoMessage() {}

func (x *GetClusterInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metaServer_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterInfoResponse.ProtoReflect.Descriptor instead.
func (*GetClusterInfoResponse) Descriptor() ([]byte, []int) {
	return file_metaServer_proto_rawDescGZIP(), []int{18}
}

func (x *GetClusterInfoResponse) GetClusterInfo() *ClusterInfo {
	if x != nil {
		return x.ClusterInfo
	}
	return nil
}

// Heartbeat (内部接口，保持不变以兼容DataServer)
type HeartbeatRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	DataserverId   string                 `protobuf:"bytes,1,opt,name=dataServer_id,json=dataServerId,proto3" json:"dataServer_id,omitempty"`
	DataserverAddr string                 `protobuf:"bytes,2,opt,name=dataServer_addr,json=dataServerAddr,proto3" json:"dataServer_addr,omitempty"`
	BlockCount     uint64                 `protobuf:"varint,3,opt,name=block_count,json=blockCount,proto3" json:"block_count,omitempty"`
	FreeSpace      uint64                 `protobuf:"varint,4,opt,name=free_space,json=freeSpace,proto3" json:"free_space,omitempty"`
	BlockIdsReport []uint64               `protobuf:"varint,5,rep,packed,name=block_ids_report,json=blockIdsReport,proto3" json:"block_ids_report,omitempty"`
	TotalCapacity  uint64                 `protobuf:"varint,6,opt,name=total_capacity,json=totalCapacity,proto3" json:"total_capacity,omitempty"` // 总容量（字节）
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *HeartbeatRequest) Reset() {
	*x = HeartbeatRequest{}
	mi := &file_metaServer_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest) ProtoMessage() {}

func (x *HeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metaServer_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_metaServer_proto_rawDescGZIP(), []int{19}
}

func (x *HeartbeatRequest) GetDataserverId() string {
	if x != nil {
		return x.DataserverId
	}
	return ""
}

func (x *HeartbeatRequest) GetDataserverAddr() string {
	if x != nil {
		return x.DataserverAddr
	}
	return ""
}

func (x *HeartbeatRequest) GetBlockCount() uint64 {
	if x != nil {
		return x.BlockCount
	}
	return 0
}

func (x *HeartbeatRequest) GetFreeSpace() uint64 {
	if x != nil {
		return x.FreeSpace
	}
	return 0
}

func (x *HeartbeatRequest) GetBlockIdsReport() []uint64 {
	if x != nil {
		return x.BlockIdsReport
	}
	return nil
}

func (x *HeartbeatRequest) GetTotalCapacity() uint64 {
	if x != nil {
		return x.TotalCapacity
	}
	return 0
}

type Command struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Action        Command_Action         `protobuf:"varint,1,opt,name=action,proto3,enum=dfs_project.Command_Action" json:"action,omitempty"`
	BlockId       uint64                 `protobuf:"varint,2,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	Targets       []string               `protobuf:"bytes,3,rep,name=targets,proto3" json:"targets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Command) Reset() {
	*x = Command{}
	mi := &file_metaServer_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_metaServer_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_metaServer_proto_rawDescGZIP(), []int{20}
}

func (x *Command) GetAction() Command_Action {
	if x != nil {
		return x.Action
	}
	return Command_DELETE_BLOCK
}

func (x *Command) GetBlockId() uint64 {
	if x != nil {
		return x.BlockId
	}
	return 0
}

func (x *Command) GetTargets() []string {
	if x != nil {
		return x.Targets
	}
	return nil
}

type HeartbeatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Commands      []*Command             `protobuf:"bytes,1,rep,name=commands,proto3" json:"commands,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatResponse) Reset() {
	*x = HeartbeatResponse{}
	mi := &file_metaServer_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResponse) ProtoMessage() {}

func (x *HeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metaServer_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResponse.ProtoReflect.Descriptor instead.
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_metaServer_proto_rawDescGZIP(), []int{21}
}

func (x *HeartbeatResponse) GetCommands() []*Command {
	if x != nil {
		return x.Commands
	}
	return nil
}

// GetReplicationInfo
type GetReplicationInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReplicationInfoRequest) Reset() {
	*x = GetReplicationInfoRequest{}
	mi := &file_metaServer_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReplicationInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReplicationInfoRequest) ProtoMessage() {}

func (x *GetReplicationInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metaServer_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReplicationInfoRequest.ProtoReflect.Descriptor instead.
func (*GetReplicationInfoRequest) Descriptor() ([]byte, []int) {
	return file_metaServer_proto_rawDescGZIP(), []int{22}
}

func (x *GetReplicationInfoRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type BlockReplicationInfo struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	BlockId           uint64                 `protobuf:"varint,1,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	Locations         []string               `protobuf:"bytes,2,rep,name=locations,proto3" json:"locations,omitempty"`
	ExpectedLocations []string               `protobuf:"bytes,3,rep,name=expected_locations,json=expectedLocations,proto3" json:"expected_locations,omitempty"`
	ReplicaCount      uint32                 `protobuf:"varint,4,opt,name=replica_count,json=replicaCount,proto3" json:"replica_count,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *BlockReplicationInfo) Reset() {
	*x = BlockReplicationInfo{}
	mi := &file_metaServer_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockReplicationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockReplicationInfo) ProtoMessage() {}

func (x *BlockReplicationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_metaServer_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockReplicationInfo.ProtoReflect.Descriptor instead.
func (*BlockReplicationInfo) Descriptor() ([]byte, []int) {
	return file_metaServer_proto_rawDescGZIP(), []int{23}
}

func (x *BlockReplicationInfo) GetBlockId() uint64 {
	if x != nil {
		return x.BlockId
	}
	return 0
}

func (x *BlockReplicationInfo) GetLocations() []string {
	if x != nil {
		return x.Locations
	}
	return nil
}

func (x *BlockReplicationInfo) GetExpectedLocations() []string {
	if x != nil {
		return x.ExpectedLocations
	}
	return nil
}

func (x *BlockReplicationInfo) GetReplicaCount() uint32 {
	if x != nil {
		return x.ReplicaCount
	}
	return 0
}

type ReplicationStatus struct {
	state            protoimpl.MessageState  `protogen:"open.v1"`
	Path             string                  `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Inode            uint64                  `protobuf:"varint,2,opt,name=inode,proto3" json:"inode,omitempty"`
	Size             int64                   `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"` // 改为 int64
	ExpectedReplicas uint32                  `protobuf:"varint,4,opt,name=expected_replicas,json=expectedReplicas,proto3" json:"expected_replicas,omitempty"`
	ActualReplicas   uint32                  `protobuf:"varint,5,opt,name=actual_replicas,json=actualReplicas,proto3" json:"actual_replicas,omitempty"`
	Blocks           []*BlockReplicationInfo `protobuf:"bytes,6,rep,name=blocks,proto3" json:"blocks,omitempty"`
	Status           string                  `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ReplicationStatus) Reset() {
	*x = ReplicationStatus{}
	mi := &file_metaServer_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplicationStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicationStatus) ProtoMessage() {}

func (x *ReplicationStatus) ProtoReflect() protoreflect.Message {
	mi := &file_metaServer_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicationStatus.ProtoReflect.Descriptor instead.
func (*ReplicationStatus) Descriptor() ([]byte, []int) {
	return file_metaServer_proto_rawDescGZIP(), []int{24}
}

func (x *ReplicationStatus) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ReplicationStatus) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *ReplicationStatus) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ReplicationStatus) GetExpectedReplicas() uint32 {
	if x != nil {
		return x.ExpectedReplicas
	}
	return 0
}

func (x *ReplicationStatus) GetActualReplicas() uint32 {
	if x != nil {
		return x.ActualReplicas
	}
	return 0
}

func (x *ReplicationStatus) GetBlocks() []*BlockReplicationInfo {
	if x != nil {
		return x.Blocks
	}
	return nil
}

func (x *ReplicationStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type GetReplicationInfoResponse struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Files                []*ReplicationStatus   `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	TotalFiles           uint32                 `protobuf:"varint,2,opt,name=total_files,json=totalFiles,proto3" json:"total_files,omitempty"`
	HealthyFiles         uint32                 `protobuf:"varint,3,opt,name=healthy_files,json=healthyFiles,proto3" json:"healthy_files,omitempty"`
	UnderReplicatedFiles uint32                 `protobuf:"varint,4,opt,name=under_replicated_files,json=underReplicatedFiles,proto3" json:"under_replicated_files,omitempty"`
	OverReplicatedFiles  uint32                 `protobuf:"varint,5,opt,name=over_replicated_files,json=overReplicatedFiles,proto3" json:"over_replicated_files,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GetReplicationInfoResponse) Reset() {
	*x = GetReplicationInfoResponse{}
	mi := &file_metaServer_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReplicationInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReplicationInfoResponse) ProtoMessage() {}

func (x *GetReplicationInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metaServer_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReplicationInfoResponse.ProtoReflect.Descriptor instead.
func (*GetReplicationInfoResponse) Descriptor() ([]byte, []int) {
	return file_metaServer_proto_rawDescGZIP(), []int{25}
}

func (x *GetReplicationInfoResponse) GetFiles() []*ReplicationStatus {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *GetReplicationInfoResponse) GetTotalFiles() uint32 {
	if x != nil {
		return x.TotalFiles
	}
	return 0
}

func (x *GetReplicationInfoResponse) GetHealthyFiles() uint32 {
	if x != nil {
		return x.HealthyFiles
	}
	return 0
}

func (x *GetReplicationInfoResponse) GetUnderReplicatedFiles() uint32 {
	if x != nil {
		return x.UnderReplicatedFiles
	}
	return 0
}

func (x *GetReplicationInfoResponse) GetOverReplicatedFiles() uint32 {
	if x != nil {
		return x.OverReplicatedFiles
	}
	return 0
}

type GetLeaderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLeaderRequest) Reset() {
	*x = GetLeaderRequest{}
	mi := &file_metaServer_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLeaderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeaderRequest) ProtoMessage() {}

func (x *GetLeaderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metaServer_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeaderRequest.ProtoReflect.Descriptor instead.
func (*GetLeaderRequest) Descriptor() ([]byte, []int) {
	return file_metaServer_proto_rawDescGZIP(), []int{26}
}

type GetLeaderResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Leader        *MetaServerMsg         `protobuf:"bytes,1,opt,name=leader,proto3" json:"leader,omitempty"`
	Followers     []*MetaServerMsg       `protobuf:"bytes,2,rep,name=followers,proto3" json:"followers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLeaderResponse) Reset() {
	*x = GetLeaderResponse{}
	mi := &file_metaServer_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLeaderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLeaderResponse) ProtoMessage() {}

func (x *GetLeaderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metaServer_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLeaderResponse.ProtoReflect.Descriptor instead.
func (*GetLeaderResponse) Descriptor() ([]byte, []int) {
	return file_metaServer_proto_rawDescGZIP(), []int{27}
}

func (x *GetLeaderResponse) GetLeader() *MetaServerMsg {
	if x != nil {
		return x.Leader
	}
	return nil
}

func (x *GetLeaderResponse) GetFollowers() []*MetaServerMsg {
	if x != nil {
		return x.Followers
	}
	return nil
}

// WAL日志条目 (用于主从同步)
type LogEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LogIndex      uint64                 `protobuf:"varint,1,opt,name=log_index,json=logIndex,proto3" json:"log_index,omitempty"`                     // 日志序号
	Timestamp     int64                  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                   // 时间戳
	Operation     WALOperationType       `protobuf:"varint,3,opt,name=operation,proto3,enum=dfs_project.WALOperationType" json:"operation,omitempty"` // 操作类型
	Data          []byte                 `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`                                              // 操作数据（JSON格式）
	Checksum      string                 `protobuf:"bytes,5,opt,name=checksum,proto3" json:"checksum,omitempty"`                                      // 数据校验和
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogEntry) Reset() {
	*x = LogEntry{}
	mi := &file_metaServer_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEntry) ProtoMessage() {}

func (x *LogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_metaServer_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEntry.ProtoReflect.Descriptor instead.
func (*LogEntry) Descriptor() ([]byte, []int) {
	return file_metaServer_proto_rawDescGZIP(), []int{28}
}

func (x *LogEntry) GetLogIndex() uint64 {
	if x != nil {
		return x.LogIndex
	}
	return 0
}

func (x *LogEntry) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *LogEntry) GetOperation() WALOperationType {
	if x != nil {
		return x.Operation
	}
	return WALOperationType_CREATE_NODE
}

func (x *LogEntry) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *LogEntry) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

// 创建节点操作的数据
type CreateNodeOperation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Type          FileType               `protobuf:"varint,2,opt,name=type,proto3,enum=dfs_project.FileType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNodeOperation) Reset() {
	*x = CreateNodeOperation{}
	mi := &file_metaServer_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNodeOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNodeOperation) ProtoMessage() {}

func (x *CreateNodeOperation) ProtoReflect() protoreflect.Message {
	mi := &file_metaServer_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNodeOperation.ProtoReflect.Descriptor instead.
func (*CreateNodeOperation) Descriptor() ([]byte, []int) {
	return file_metaServer_proto_rawDescGZIP(), []int{29}
}

func (x *CreateNodeOperation) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CreateNodeOperation) GetType() FileType {
	if x != nil {
		return x.Type
	}
	return FileType_Unknown
}

// 删除节点操作的数据
type DeleteNodeOperation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Recursive     bool                   `protobuf:"varint,2,opt,name=recursive,proto3" json:"recursive,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNodeOperation) Reset() {
	*x = DeleteNodeOperation{}
	mi := &file_metaServer_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNodeOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNodeOperation) ProtoMessage() {}

func (x *DeleteNodeOperation) ProtoReflect() protoreflect.Message {
	mi := &file_metaServer_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNodeOperation.ProtoReflect.Descriptor instead.
func (*DeleteNodeOperation) Descriptor() ([]byte, []int) {
	return file_metaServer_proto_rawDescGZIP(), []int{30}
}

func (x *DeleteNodeOperation) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *DeleteNodeOperation) GetRecursive() bool {
	if x != nil {
		return x.Recursive
	}
	return false
}

// 更新节点操作的数据
type UpdateNodeOperation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Size          int64                  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Mtime         int64                  `protobuf:"varint,3,opt,name=mtime,proto3" json:"mtime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNodeOperation) Reset() {
	*x = UpdateNodeOperation{}
	mi := &file_metaServer_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNodeOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNodeOperation) ProtoMessage() {}

func (x *UpdateNodeOperation) ProtoReflect() protoreflect.Message {
	mi := &file_metaServer_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNodeOperation.ProtoReflect.Descriptor instead.
func (*UpdateNodeOperation) Descriptor() ([]byte, []int) {
	return file_metaServer_proto_rawDescGZIP(), []int{31}
}

func (x *UpdateNodeOperation) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *UpdateNodeOperation) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *UpdateNodeOperation) GetMtime() int64 {
	if x != nil {
		return x.Mtime
	}
	return 0
}

// 完成写入操作的数据
type FinalizeWriteOperation struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Path           string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	BlockLocations []*BlockLocations      `protobuf:"bytes,2,rep,name=block_locations,json=blockLocations,proto3" json:"block_locations,omitempty"`
	Inode          uint64                 `protobuf:"varint,3,opt,name=inode,proto3" json:"inode,omitempty"`
	Size           int64                  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	Md5            string                 `protobuf:"bytes,5,opt,name=md5,proto3" json:"md5,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *FinalizeWriteOperation) Reset() {
	*x = FinalizeWriteOperation{}
	mi := &file_metaServer_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FinalizeWriteOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizeWriteOperation) ProtoMessage() {}

func (x *FinalizeWriteOperation) ProtoReflect() protoreflect.Message {
	mi := &file_metaServer_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalizeWriteOperation.ProtoReflect.Descriptor instead.
func (*FinalizeWriteOperation) Descriptor() ([]byte, []int) {
	return file_metaServer_proto_rawDescGZIP(), []int{32}
}

func (x *FinalizeWriteOperation) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FinalizeWriteOperation) GetBlockLocations() []*BlockLocations {
	if x != nil {
		return x.BlockLocations
	}
	return nil
}

func (x *FinalizeWriteOperation) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *FinalizeWriteOperation) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FinalizeWriteOperation) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

var File_metaServer_proto protoreflect.FileDescriptor

const file_metaServer_proto_rawDesc = "" +
	"\n" +
	"\x10metaServer.proto\x12\vdfs_project\"I\n" +
	"\vReplicaData\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06dsNode\x18\x02 \x01(\tR\x06dsNode\x12\x12\n" +
	"\x04path\x18\x03 \x01(\tR\x04path\"\xc1\x01\n" +
	"\bStatInfo\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x12\n" +
	"\x04size\x18\x02 \x01(\x03R\x04size\x12\x14\n" +
	"\x05mtime\x18\x03 \x01(\x03R\x05mtime\x12)\n" +
	"\x04type\x18\x04 \x01(\x0e2\x15.dfs_project.FileTypeR\x04type\x12:\n" +
	"\vreplicaData\x18\x05 \x03(\v2\x18.dfs_project.ReplicaDataR\vreplicaData\x12\x10\n" +
	"\x03md5\x18\x06 \x01(\tR\x03md5\"7\n" +
	"\rMetaServerMsg\x12\x12\n" +
	"\x04host\x18\x01 \x01(\tR\x04host\x12\x12\n" +
	"\x04port\x18\x02 \x01(\x05R\x04port\"\x93\x01\n" +
	"\rDataServerMsg\x12\x12\n" +
	"\x04host\x18\x01 \x01(\tR\x04host\x12\x12\n" +
	"\x04port\x18\x02 \x01(\x05R\x04port\x12\x1c\n" +
	"\tfileTotal\x18\x03 \x01(\x05R\tfileTotal\x12\x1a\n" +
	"\bcapacity\x18\x04 \x01(\x05R\bcapacity\x12 \n" +
	"\vuseCapacity\x18\x05 \x01(\x05R\vuseCapacity\"\xd7\x01\n" +
	"\vClusterInfo\x12F\n" +
	"\x10masterMetaServer\x18\x01 \x01(\v2\x1a.dfs_project.MetaServerMsgR\x10masterMetaServer\x12D\n" +
	"\x0fslaveMetaServer\x18\x02 \x03(\v2\x1a.dfs_project.MetaServerMsgR\x0fslaveMetaServer\x12:\n" +
	"\n" +
	"dataServer\x18\x03 \x03(\v2\x1a.dfs_project.DataServerMsgR\n" +
	"dataServer\"\xf9\x01\n" +
	"\bNodeInfo\x12\x14\n" +
	"\x05inode\x18\x01 \x01(\x04R\x05inode\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12)\n" +
	"\x04type\x18\x03 \x01(\x0e2\x15.dfs_project.FileTypeR\x04type\x12\x12\n" +
	"\x04size\x18\x04 \x01(\x03R\x04size\x12\x14\n" +
	"\x05mtime\x18\x05 \x01(\x03R\x05mtime\x12 \n" +
	"\vreplication\x18\x06 \x01(\rR\vreplication\x12\x10\n" +
	"\x03md5\x18\a \x01(\tR\x03md5\x12:\n" +
	"\vreplicaData\x18\b \x03(\v2\x18.dfs_project.ReplicaDataR\vreplicaData\"I\n" +
	"\x0eBlockLocations\x12\x19\n" +
	"\bblock_id\x18\x01 \x01(\x04R\ablockId\x12\x1c\n" +
	"\tlocations\x18\x02 \x03(\tR\tlocations\"D\n" +
	"\x0eSimpleResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"R\n" +
	"\x11CreateNodeRequest\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12)\n" +
	"\x04type\x18\x02 \x01(\x0e2\x15.dfs_project.FileTypeR\x04type\"(\n" +
	"\x12GetNodeInfoRequest\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\"H\n" +
	"\x13GetNodeInfoResponse\x121\n" +
	"\bstatInfo\x18\x01 \x01(\v2\x15.dfs_project.StatInfoR\bstatInfo\"*\n" +
	"\x14ListDirectoryRequest\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\"D\n" +
	"\x15ListDirectoryResponse\x12+\n" +
	"\x05nodes\x18\x01 \x03(\v2\x15.dfs_project.StatInfoR\x05nodes\"E\n" +
	"\x11DeleteNodeRequest\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x1c\n" +
	"\trecursive\x18\x02 \x01(\bR\trecursive\"B\n" +
	"\x18GetBlockLocationsRequest\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x12\n" +
	"\x04size\x18\x02 \x01(\x03R\x04size\"w\n" +
	"\x19GetBlockLocationsResponse\x12\x14\n" +
	"\x05inode\x18\x01 \x01(\x04R\x05inode\x12D\n" +
	"\x0fblock_locations\x18\x02 \x03(\v2\x1b.dfs_project.BlockLocationsR\x0eblockLocations\"f\n" +
	"\x14FinalizeWriteRequest\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x14\n" +
	"\x05inode\x18\x02 \x01(\x04R\x05inode\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x03R\x04size\x12\x10\n" +
	"\x03md5\x18\x04 \x01(\tR\x03md5\"\x17\n" +
	"\x15GetClusterInfoRequest\"T\n" +
	"\x16GetClusterInfoResponse\x12:\n" +
	"\vclusterInfo\x18\x01 \x01(\v2\x18.dfs_project.ClusterInfoR\vclusterInfo\"\xf1\x01\n" +
	"\x10HeartbeatRequest\x12#\n" +
	"\rdataServer_id\x18\x01 \x01(\tR\fdataServerId\x12'\n" +
	"\x0fdataServer_addr\x18\x02 \x01(\tR\x0edataServerAddr\x12\x1f\n" +
	"\vblock_count\x18\x03 \x01(\x04R\n" +
	"blockCount\x12\x1d\n" +
	"\n" +
	"free_space\x18\x04 \x01(\x04R\tfreeSpace\x12(\n" +
	"\x10block_ids_report\x18\x05 \x03(\x04R\x0eblockIdsReport\x12%\n" +
	"\x0etotal_capacity\x18\x06 \x01(\x04R\rtotalCapacity\"\x9f\x01\n" +
	"\aCommand\x123\n" +
	"\x06action\x18\x01 \x01(\x0e2\x1b.dfs_project.Command.ActionR\x06action\x12\x19\n" +
	"\bblock_id\x18\x02 \x01(\x04R\ablockId\x12\x18\n" +
	"\atargets\x18\x03 \x03(\tR\atargets\"*\n" +
	"\x06Action\x12\x10\n" +
	"\fDELETE_BLOCK\x10\x00\x12\x0e\n" +
	"\n" +
	"COPY_BLOCK\x10\x01\"E\n" +
	"\x11HeartbeatResponse\x120\n" +
	"\bcommands\x18\x01 \x03(\v2\x14.dfs_project.CommandR\bcommands\"/\n" +
	"\x19GetReplicationInfoRequest\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\"\xa3\x01\n" +
	"\x14BlockReplicationInfo\x12\x19\n" +
	"\bblock_id\x18\x01 \x01(\x04R\ablockId\x12\x1c\n" +
	"\tlocations\x18\x02 \x03(\tR\tlocations\x12-\n" +
	"\x12expected_locations\x18\x03 \x03(\tR\x11expectedLocations\x12#\n" +
	"\rreplica_count\x18\x04 \x01(\rR\freplicaCount\"\xfa\x01\n" +
	"\x11ReplicationStatus\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x14\n" +
	"\x05inode\x18\x02 \x01(\x04R\x05inode\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x03R\x04size\x12+\n" +
	"\x11expected_replicas\x18\x04 \x01(\rR\x10expectedReplicas\x12'\n" +
	"\x0factual_replicas\x18\x05 \x01(\rR\x0eactualReplicas\x129\n" +
	"\x06blocks\x18\x06 \x03(\v2!.dfs_project.BlockReplicationInfoR\x06blocks\x12\x16\n" +
	"\x06status\x18\a \x01(\tR\x06status\"\x82\x02\n" +
	"\x1aGetReplicationInfoResponse\x124\n" +
	"\x05files\x18\x01 \x03(\v2\x1e.dfs_project.ReplicationStatusR\x05files\x12\x1f\n" +
	"\vtotal_files\x18\x02 \x01(\rR\n" +
	"totalFiles\x12#\n" +
	"\rhealthy_files\x18\x03 \x01(\rR\fhealthyFiles\x124\n" +
	"\x16under_replicated_files\x18\x04 \x01(\rR\x14underReplicatedFiles\x122\n" +
	"\x15over_replicated_files\x18\x05 \x01(\rR\x13overReplicatedFiles\"\x12\n" +
	"\x10GetLeaderRequest\"\x81\x01\n" +
	"\x11GetLeaderResponse\x122\n" +
	"\x06leader\x18\x01 \x01(\v2\x1a.dfs_project.MetaServerMsgR\x06leader\x128\n" +
	"\tfollowers\x18\x02 \x03(\v2\x1a.dfs_project.MetaServerMsgR\tfollowers\"\xb2\x01\n" +
	"\bLogEntry\x12\x1b\n" +
	"\tlog_index\x18\x01 \x01(\x04R\blogIndex\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\x03R\ttimestamp\x12;\n" +
	"\toperation\x18\x03 \x01(\x0e2\x1d.dfs_project.WALOperationTypeR\toperation\x12\x12\n" +
	"\x04data\x18\x04 \x01(\fR\x04data\x12\x1a\n" +
	"\bchecksum\x18\x05 \x01(\tR\bchecksum\"T\n" +
	"\x13CreateNodeOperation\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12)\n" +
	"\x04type\x18\x02 \x01(\x0e2\x15.dfs_project.FileTypeR\x04type\"G\n" +
	"\x13DeleteNodeOperation\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x1c\n" +
	"\trecursive\x18\x02 \x01(\bR\trecursive\"S\n" +
	"\x13UpdateNodeOperation\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x12\n" +
	"\x04size\x18\x02 \x01(\x03R\x04size\x12\x14\n" +
	"\x05mtime\x18\x03 \x01(\x03R\x05mtime\"\xae\x01\n" +
	"\x16FinalizeWriteOperation\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12D\n" +
	"\x0fblock_locations\x18\x02 \x03(\v2\x1b.dfs_project.BlockLocationsR\x0eblockLocations\x12\x14\n" +
	"\x05inode\x18\x03 \x01(\x04R\x05inode\x12\x12\n" +
	"\x04size\x18\x04 \x01(\x03R\x04size\x12\x10\n" +
	"\x03md5\x18\x05 \x01(\tR\x03md5*<\n" +
	"\bFileType\x12\v\n" +
	"\aUnknown\x10\x00\x12\n" +
	"\n" +
	"\x06Volume\x10\x01\x12\b\n" +
	"\x04File\x10\x02\x12\r\n" +
	"\tDirectory\x10\x03*Y\n" +
	"\x10WALOperationType\x12\x0f\n" +
	"\vCREATE_NODE\x10\x00\x12\x0f\n" +
	"\vDELETE_NODE\x10\x01\x12\x0f\n" +
	"\vUPDATE_NODE\x10\x02\x12\x12\n" +
	"\x0eFINALIZE_WRITE\x10\x032\xa3\a\n" +
	"\x11MetaServerService\x12I\n" +
	"\n" +
	"CreateNode\x12\x1e.dfs_project.CreateNodeRequest\x1a\x1b.dfs_project.SimpleResponse\x12P\n" +
	"\vGetNodeInfo\x12\x1f.dfs_project.GetNodeInfoRequest\x1a .dfs_project.GetNodeInfoResponse\x12V\n" +
	"\rListDirectory\x12!.dfs_project.ListDirectoryRequest\x1a\".dfs_project.ListDirectoryResponse\x12I\n" +
	"\n" +
	"DeleteNode\x12\x1e.dfs_project.DeleteNodeRequest\x1a\x1b.dfs_project.SimpleResponse\x12b\n" +
	"\x11GetBlockLocations\x12%.dfs_project.GetBlockLocationsRequest\x1a&.dfs_project.GetBlockLocationsResponse\x12O\n" +
	"\rFinalizeWrite\x12!.dfs_project.FinalizeWriteRequest\x1a\x1b.dfs_project.SimpleResponse\x12Y\n" +
	"\x0eGetClusterInfo\x12\".dfs_project.GetClusterInfoRequest\x1a#.dfs_project.GetClusterInfoResponse\x12e\n" +
	"\x12GetReplicationInfo\x12&.dfs_project.GetReplicationInfoRequest\x1a'.dfs_project.GetReplicationInfoResponse\x12J\n" +
	"\tHeartbeat\x12\x1d.dfs_project.HeartbeatRequest\x1a\x1e.dfs_project.HeartbeatResponse\x12?\n" +
	"\aSyncWAL\x12\x15.dfs_project.LogEntry\x1a\x1b.dfs_project.SimpleResponse(\x01\x12J\n" +
	"\tGetLeader\x12\x1d.dfs_project.GetLeaderRequest\x1a\x1e.dfs_project.GetLeaderResponseB\x06Z\x04./pbb\x06proto3"

var (
	file_metaServer_proto_rawDescOnce sync.Once
	file_metaServer_proto_rawDescData []byte
)

func file_metaServer_proto_rawDescGZIP() []byte {
	file_metaServer_proto_rawDescOnce.Do(func() {
		file_metaServer_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_metaServer_proto_rawDesc), len(file_metaServer_proto_rawDesc)))
	})
	return file_metaServer_proto_rawDescData
}

var file_metaServer_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_metaServer_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_metaServer_proto_goTypes = []any{
	(FileType)(0),                      // 0: dfs_project.FileType
	(WALOperationType)(0),              // 1: dfs_project.WALOperationType
	(Command_Action)(0),                // 2: dfs_project.Command.Action
	(*ReplicaData)(nil),                // 3: dfs_project.ReplicaData
	(*StatInfo)(nil),                   // 4: dfs_project.StatInfo
	(*MetaServerMsg)(nil),              // 5: dfs_project.MetaServerMsg
	(*DataServerMsg)(nil),              // 6: dfs_project.DataServerMsg
	(*ClusterInfo)(nil),                // 7: dfs_project.ClusterInfo
	(*NodeInfo)(nil),                   // 8: dfs_project.NodeInfo
	(*BlockLocations)(nil),             // 9: dfs_project.BlockLocations
	(*SimpleResponse)(nil),             // 10: dfs_project.SimpleResponse
	(*CreateNodeRequest)(nil),          // 11: dfs_project.CreateNodeRequest
	(*GetNodeInfoRequest)(nil),         // 12: dfs_project.GetNodeInfoRequest
	(*GetNodeInfoResponse)(nil),        // 13: dfs_project.GetNodeInfoResponse
	(*ListDirectoryRequest)(nil),       // 14: dfs_project.ListDirectoryRequest
	(*ListDirectoryResponse)(nil),      // 15: dfs_project.ListDirectoryResponse
	(*DeleteNodeRequest)(nil),          // 16: dfs_project.DeleteNodeRequest
	(*GetBlockLocationsRequest)(nil),   // 17: dfs_project.GetBlockLocationsRequest
	(*GetBlockLocationsResponse)(nil),  // 18: dfs_project.GetBlockLocationsResponse
	(*FinalizeWriteRequest)(nil),       // 19: dfs_project.FinalizeWriteRequest
	(*GetClusterInfoRequest)(nil),      // 20: dfs_project.GetClusterInfoRequest
	(*GetClusterInfoResponse)(nil),     // 21: dfs_project.GetClusterInfoResponse
	(*HeartbeatRequest)(nil),           // 22: dfs_project.HeartbeatRequest
	(*Command)(nil),                    // 23: dfs_project.Command
	(*HeartbeatResponse)(nil),          // 24: dfs_project.HeartbeatResponse
	(*GetReplicationInfoRequest)(nil),  // 25: dfs_project.GetReplicationInfoRequest
	(*BlockReplicationInfo)(nil),       // 26: dfs_project.BlockReplicationInfo
	(*ReplicationStatus)(nil),          // 27: dfs_project.ReplicationStatus
	(*GetReplicationInfoResponse)(nil), // 28: dfs_project.GetReplicationInfoResponse
	(*GetLeaderRequest)(nil),           // 29: dfs_project.GetLeaderRequest
	(*GetLeaderResponse)(nil),          // 30: dfs_project.GetLeaderResponse
	(*LogEntry)(nil),                   // 31: dfs_project.LogEntry
	(*CreateNodeOperation)(nil),        // 32: dfs_project.CreateNodeOperation
	(*DeleteNodeOperation)(nil),        // 33: dfs_project.DeleteNodeOperation
	(*UpdateNodeOperation)(nil),        // 34: dfs_project.UpdateNodeOperation
	(*FinalizeWriteOperation)(nil),     // 35: dfs_project.FinalizeWriteOperation
}
var file_metaServer_proto_depIdxs = []int32{
	0,  // 0: dfs_project.StatInfo.type:type_name -> dfs_project.FileType
	3,  // 1: dfs_project.StatInfo.replicaData:type_name -> dfs_project.ReplicaData
	5,  // 2: dfs_project.ClusterInfo.masterMetaServer:type_name -> dfs_project.MetaServerMsg
	5,  // 3: dfs_project.ClusterInfo.slaveMetaServer:type_name -> dfs_project.MetaServerMsg
	6,  // 4: dfs_project.ClusterInfo.dataServer:type_name -> dfs_project.DataServerMsg
	0,  // 5: dfs_project.NodeInfo.type:type_name -> dfs_project.FileType
	3,  // 6: dfs_project.NodeInfo.replicaData:type_name -> dfs_project.ReplicaData
	0,  // 7: dfs_project.CreateNodeRequest.type:type_name -> dfs_project.FileType
	4,  // 8: dfs_project.GetNodeInfoResponse.statInfo:type_name -> dfs_project.StatInfo
	4,  // 9: dfs_project.ListDirectoryResponse.nodes:type_name -> dfs_project.StatInfo
	9,  // 10: dfs_project.GetBlockLocationsResponse.block_locations:type_name -> dfs_project.BlockLocations
	7,  // 11: dfs_project.GetClusterInfoResponse.clusterInfo:type_name -> dfs_project.ClusterInfo
	2,  // 12: dfs_project.Command.action:type_name -> dfs_project.Command.Action
	23, // 13: dfs_project.HeartbeatResponse.commands:type_name -> dfs_project.Command
	26, // 14: dfs_project.ReplicationStatus.blocks:type_name -> dfs_project.BlockReplicationInfo
	27, // 15: dfs_project.GetReplicationInfoResponse.files:type_name -> dfs_project.ReplicationStatus
	5,  // 16: dfs_project.GetLeaderResponse.leader:type_name -> dfs_project.MetaServerMsg
	5,  // 17: dfs_project.GetLeaderResponse.followers:type_name -> dfs_project.MetaServerMsg
	1,  // 18: dfs_project.LogEntry.operation:type_name -> dfs_project.WALOperationType
	0,  // 19: dfs_project.CreateNodeOperation.type:type_name -> dfs_project.FileType
	9,  // 20: dfs_project.FinalizeWriteOperation.block_locations:type_name -> dfs_project.BlockLocations
	11, // 21: dfs_project.MetaServerService.CreateNode:input_type -> dfs_project.CreateNodeRequest
	12, // 22: dfs_project.MetaServerService.GetNodeInfo:input_type -> dfs_project.GetNodeInfoRequest
	14, // 23: dfs_project.MetaServerService.ListDirectory:input_type -> dfs_project.ListDirectoryRequest
	16, // 24: dfs_project.MetaServerService.DeleteNode:input_type -> dfs_project.DeleteNodeRequest
	17, // 25: dfs_project.MetaServerService.GetBlockLocations:input_type -> dfs_project.GetBlockLocationsRequest
	19, // 26: dfs_project.MetaServerService.FinalizeWrite:input_type -> dfs_project.FinalizeWriteRequest
	20, // 27: dfs_project.MetaServerService.GetClusterInfo:input_type -> dfs_project.GetClusterInfoRequest
	25, // 28: dfs_project.MetaServerService.GetReplicationInfo:input_type -> dfs_project.GetReplicationInfoRequest
	22, // 29: dfs_project.MetaServerService.Heartbeat:input_type -> dfs_project.HeartbeatRequest
	31, // 30: dfs_project.MetaServerService.SyncWAL:input_type -> dfs_project.LogEntry
	29, // 31: dfs_project.MetaServerService.GetLeader:input_type -> dfs_project.GetLeaderRequest
	10, // 32: dfs_project.MetaServerService.CreateNode:output_type -> dfs_project.SimpleResponse
	13, // 33: dfs_project.MetaServerService.GetNodeInfo:output_type -> dfs_project.GetNodeInfoResponse
	15, // 34: dfs_project.MetaServerService.ListDirectory:output_type -> dfs_project.ListDirectoryResponse
	10, // 35: dfs_project.MetaServerService.DeleteNode:output_type -> dfs_project.SimpleResponse
	18, // 36: dfs_project.MetaServerService.GetBlockLocations:output_type -> dfs_project.GetBlockLocationsResponse
	10, // 37: dfs_project.MetaServerService.FinalizeWrite:output_type -> dfs_project.SimpleResponse
	21, // 38: dfs_project.MetaServerService.GetClusterInfo:output_type -> dfs_project.GetClusterInfoResponse
	28, // 39: dfs_project.MetaServerService.GetReplicationInfo:output_type -> dfs_project.GetReplicationInfoResponse
	24, // 40: dfs_project.MetaServerService.Heartbeat:output_type -> dfs_project.HeartbeatResponse
	10, // 41: dfs_project.MetaServerService.SyncWAL:output_type -> dfs_project.SimpleResponse
	30, // 42: dfs_project.MetaServerService.GetLeader:output_type -> dfs_project.GetLeaderResponse
	32, // [32:43] is the sub-list for method output_type
	21, // [21:32] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_metaServer_proto_init() }
func file_metaServer_proto_init() {
	if File_metaServer_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_metaServer_proto_rawDesc), len(file_metaServer_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_metaServer_proto_goTypes,
		DependencyIndexes: file_metaServer_proto_depIdxs,
		EnumInfos:         file_metaServer_proto_enumTypes,
		MessageInfos:      file_metaServer_proto_msgTypes,
	}.Build()
	File_metaServer_proto = out.File
	file_metaServer_proto_goTypes = nil
	file_metaServer_proto_depIdxs = nil
}
